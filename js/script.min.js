(function(){
    const wheel = document.getElementById("wheelImage"),
          pointer = document.getElementById("pointerImage");
    let isSpinning = false,
        currentRotation = 0;

    // 定義有效的角度範圍
    const validRanges = [
        [0, 16],    // Free Single Scoop
        [20, 52],   // Free Topping
        [54, 88],   // 10% Off
        [128, 160], // Free Topping
        [200, 232], // Free Upsize
        [236, 268], // Free Topping
        [272, 304], // 10% Off
        [308, 340], // Free Upsize
        [344, 360]  // Free Single Scoop
    ];

    function getRandomValidAngle() {
        const validRangeIndex = Math.floor(Math.random() * validRanges.length);
        const [min, max] = validRanges[validRangeIndex];
        const randomAngle = min + Math.random() * (max - min);
        console.log(`Selected range: ${min}° - ${max}°, Generated angle: ${randomAngle}°`);
        return randomAngle;
    }

    function getRandomRotation() {
        const minRotations = 2160; // 最少旋轉6圈
        const randomAngle = getRandomValidAngle();
        return minRotations + randomAngle;
    }

    function rotateWheel() {
        if (isSpinning) return;
        
        isSpinning = true;
        pointer.classList.add('spinning');
        
        const targetRotation = getRandomRotation();
        // 計算最終角度（0-360度範圍內）
        const finalAngle = targetRotation % 360;
        console.log(`Target rotation: ${targetRotation}°, Final angle: ${finalAngle}°`);
        
        wheel.style.transform = `rotate(${targetRotation}deg)`;
        
        setTimeout(() => {
            isSpinning = false;
            pointer.classList.remove('spinning');
            currentRotation = finalAngle;
            
            // 保持最終角度
            wheel.style.transition = 'none';
            wheel.style.transform = `rotate(${currentRotation}deg)`;
            wheel.offsetHeight;
            wheel.style.transition = 'transform 5s cubic-bezier(0.2, 0.8, 0.3, 0.99)';
            
            // 直接保存實際的角度，不做任何轉換
            console.log('Saving angle to localStorage:', currentRotation);
            localStorage.setItem('wheelAngle', currentRotation.toString());
        }, 5000);
    }

    pointer.addEventListener('click', rotateWheel);
    pointer.addEventListener('touchstart', function(e) {
        e.preventDefault();
        rotateWheel();
    });

    document.addEventListener('touchmove', function(e) {
        e.preventDefault();
    }, {passive: false});

    window.addEventListener('load', () => {
        wheel.style.transform = 'rotate(0deg)';
    });
})(); 